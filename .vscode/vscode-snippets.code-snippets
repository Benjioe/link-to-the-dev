{
	// Place your link-to-the-dev workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"language": {
		"description": "language template",
		"body": [
			"import type {language} from \"../types\"",
			"",
			"import {} from \"../concepts\"",
			"import {} from \"../paragism\"",
			"",
			"export const ${TM_FILENAME_BASE}: language = {",
			"\tconcepts: [],",
			"\tphilosophies: [],",
			"\tsyntax: [],",
			"\tparagism: []",
			"}"
		] 
		
	},
	"concept" : {
		"scope": "typescript",
		"body": [
			"import {conceptTrad} from \"../types\"",
			"",
			"export const ${TM_FILENAME_BASE}: conceptTrad = {",
			"\ten: {",
			"\t\tname: \"${TM_FILENAME_BASE}\",",
			"\t\tdescription: \"\"",
			"\t},",
			"\tfr: {",
			"\t\tname: \"${TM_FILENAME_BASE}\",",
			"\t\tdescription: \"\"",
			"\t},",
			"};",
		],
		"description": "Create a concept"
	},
	"paragism": {
		"scope": "typescript",
		"body": [
			"import { paragismTrad } from \"../types\"",
			"",
			"export const ${TM_FILENAME_BASE}: paragismTrad = {", 
			"\ten: {",
			"\t\tname: \"${TM_FILENAME_BASE}\",",
			"\t\tdescription: \"\"",
			"\t},",
			"\tfr: {",
			"\t\tname: \"${TM_FILENAME_BASE}\",",
			"\t\tdescription: \"\"",
			"\t},",
			"};"
		],
		"description": "Create a paragism"
	},
	"philosophy": {
		"scope": "typescript",
		"body": [
			"import { philosophyTrad } from \"../types\"",
			"",
			"export const ${TM_FILENAME_BASE}: philosophyTrad = {", 
			"\ten: {",
			"\t\tname: \"${TM_FILENAME_BASE}\",",
			"\t\tdescription: \"\"",
			"\t},",
			"\tfr: {",
			"\t\tname: \"${TM_FILENAME_BASE}\",",
			"\t\tdescription: \"\"",
			"\t},",
			"};"
		],
		"description": "Create a philosophy"
	},
	"syntax": {
		"scope": "typescript",
		"body": [
			"import type {syntaxTrad} from \"../types\"",
			"",
			"export const prefixNotation: syntaxTrad = {", 
			"\ten: {",
			"\t\tname: \"${TM_FILENAME_BASE}\",",
			"\t\tdescription: \"\"",
			"\t},",
			"\tfr: {",
			"\t\tname: \"${TM_FILENAME_BASE}\",",
			"\t\tdescription: \"\"",
			"\t},",
			"};"
		],
		"description": "Create a syntax"
	}

}